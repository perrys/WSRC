# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2022-01-17 23:51
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('usermodel', '0008_auto_20180612_1220'),
    ]

    operations = [
        migrations.CreateModel(
            name='ClubEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=64)),
                ('display_date', models.DateField(blank=True, null=True)),
                ('display_time', models.TimeField(blank=True, null=True)),
                ('picture', models.ImageField(blank=True, null=True, upload_to=b'event_pictures/%Y/%m/%d')),
                ('markup', models.TextField()),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Lobby Screen Events',
            },
        ),
        migrations.CreateModel(
            name='CommitteeMeetingMinutes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('pdf_file', models.FileField(upload_to=b'actions', verbose_name=b'PDF File')),
            ],
            options={
                'ordering': ['-date'],
                'verbose_name': 'Committee Actions',
                'verbose_name_plural': 'Committee Actions',
            },
        ),
        migrations.CreateModel(
            name='EmailContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('template_type', models.CharField(choices=[(b'django', b'Django'), (b'jinja2', b'Jinja 2')], max_length=16)),
                ('markup', models.TextField()),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Email Templates',
            },
        ),
        migrations.CreateModel(
            name='GenericPDFDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('pdf_file', models.FileField(upload_to=b'pdf_docs', verbose_name=b'PDF File')),
            ],
            options={
                'ordering': ['-date'],
                'verbose_name': 'Document',
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_file', models.FileField(upload_to=b'images', verbose_name=b'Image File')),
                ('date', models.DateField(auto_now_add=True)),
                ('width', models.IntegerField()),
                ('height', models.IntegerField()),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='LeagueMasterFixtures',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team', models.CharField(max_length=64)),
                ('opponents', models.CharField(max_length=64)),
                ('home_or_away', models.CharField(choices=[(b'h', b'Home'), (b'a', b'Away')], max_length=1)),
                ('date', models.DateField()),
                ('team1_score', models.IntegerField(blank=True, null=True)),
                ('team2_score', models.IntegerField(blank=True, null=True)),
                ('team1_points', models.IntegerField(blank=True, null=True)),
                ('team2_points', models.IntegerField(blank=True, null=True)),
                ('url', models.CharField(blank=True, max_length=128, null=True)),
            ],
            options={
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='MaintenanceIssue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('reported_date', models.DateField(auto_now_add=True)),
                ('status', models.CharField(choices=[(b'ar', b'Awaiting Review'), (b'aa', b'Awaiting Action'), (b'c', b'Complete'), (b'ni', b'Non-issue')], default=b'ar', max_length=2)),
                ('target_date', models.DateField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('reporter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='usermodel.Player')),
            ],
            options={
                'verbose_name': 'Feedback - Maintenance Issue',
            },
        ),
        migrations.CreateModel(
            name='NavigationNode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('ordering', models.IntegerField(blank=True, help_text=b'higher numbers appear higher', null=True)),
                ('is_restricted', models.BooleanField(default=False, help_text=b'Login required to view')),
                ('icon', models.CharField(blank=True, max_length=32, null=True)),
            ],
            options={
                'ordering': ['-ordering'],
                'verbose_name': 'Navigation Node',
            },
        ),
        migrations.CreateModel(
            name='OAuthAccess',
            fields=[
                ('name', models.CharField(max_length=16, primary_key=True, serialize=False)),
                ('grant_type', models.CharField(choices=[(b'client_credentials', b'client_credentials'), (b'authorization_code', b'authorization_code')], max_length=32)),
                ('auth_server_uri', models.CharField(max_length=255)),
                ('token_endpoint', models.CharField(max_length=255)),
                ('login_endpoint', models.CharField(blank=True, max_length=255, null=True)),
                ('metadata_endpoint', models.CharField(blank=True, max_length=255, null=True)),
                ('redirect_uri', models.CharField(blank=True, max_length=255, null=True)),
                ('client_id', models.CharField(max_length=255)),
                ('client_secret', models.CharField(max_length=255)),
                ('access_token', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'OAuth Credentials',
                'verbose_name_plural': 'OAuth Credentials',
            },
        ),
        migrations.CreateModel(
            name='PageContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page', models.CharField(max_length=32)),
                ('markup', models.TextField()),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Page Templates',
            },
        ),
        migrations.CreateModel(
            name='SquashLevels',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('num_events', models.IntegerField()),
                ('last_match_date', models.DateField()),
                ('last_match_id', models.IntegerField()),
                ('level', models.IntegerField()),
                ('player', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='usermodel.Player')),
            ],
            options={
                'ordering': ['-level'],
            },
        ),
        migrations.CreateModel(
            name='Suggestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('submitted_date', models.DateField(auto_now_add=True)),
                ('reviewed_date', models.DateField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('suggester', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='usermodel.Player')),
            ],
            options={
                'verbose_name': 'Feedback - Suggestion',
            },
        ),
        migrations.CreateModel(
            name='NavigationLink',
            fields=[
                ('navigationnode_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='site.NavigationNode')),
                ('url', models.CharField(max_length=256)),
                ('is_reverse_url', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Navigation Link',
            },
            bases=('site.navigationnode',),
        ),
        migrations.AlterUniqueTogether(
            name='oauthaccess',
            unique_together=set([('auth_server_uri', 'client_id')]),
        ),
        migrations.AddField(
            model_name='navigationnode',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='site.NavigationNode'),
        ),
        migrations.AlterUniqueTogether(
            name='navigationnode',
            unique_together=set([('parent', 'ordering')]),
        ),
    ]
